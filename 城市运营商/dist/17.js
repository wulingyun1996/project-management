(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[17],{

/***/ "./node_modules/raw-loader/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/eslint-loader/index.js?!./src/vendor/Blob.js":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/eslint-loader??ref--13-0!./src/vendor/Blob.js ***!
  \*********************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"import \\\"core-js/modules/es6.object.set-prototype-of\\\";\\nimport \\\"core-js/modules/es6.regexp.to-string\\\";\\nimport \\\"core-js/modules/web.dom.iterable\\\";\\nimport \\\"core-js/modules/es6.typed.uint8-array\\\";\\nimport _typeof from \\\"C:\\\\\\\\Users\\\\\\\\Administrator\\\\\\\\Desktop\\\\\\\\\\\\u9879\\\\u76EE\\\\\\\\Wisdom-City\\\\\\\\node_modules\\\\\\\\@babel\\\\\\\\runtime/helpers/builtin/es6/typeof\\\";\\n\\n/* Blob.js\\r\\n * A Blob, File, FileReader & URL implementation.\\r\\n * 2018-08-09\\r\\n *\\r\\n * By Eli Grey, http://eligrey.com\\r\\n * By Jimmy Wärting, https://github.com/jimmywarting\\r\\n * License: MIT\\r\\n *   See https://github.com/eligrey/Blob.js/blob/master/LICENSE.md\\r\\n */\\n\\n/* eslint-disable */\\n;\\n\\n(function () {\\n  var global = (typeof window === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(window)) === 'object' ? window : (typeof self === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(self)) === 'object' ? self : this;\\n  var BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder;\\n\\n  global.URL = global.URL || global.webkitURL || function (href, a) {\\n    a = document.createElement('a');\\n    a.href = href;\\n    return a;\\n  };\\n\\n  var origBlob = global.Blob;\\n  var createObjectURL = URL.createObjectURL;\\n  var revokeObjectURL = URL.revokeObjectURL;\\n  var strTag = global.Symbol && global.Symbol.toStringTag;\\n  var blobSupported = false;\\n  var blobSupportsArrayBufferView = false;\\n  var arrayBufferSupported = !!global.ArrayBuffer;\\n  var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\\n\\n  try {\\n    // Check if Blob constructor is supported\\n    blobSupported = new Blob(['ä']).size === 2; // Check if Blob constructor supports ArrayBufferViews\\n    // Fails in Safari 6, so we need to map to ArrayBuffers there.\\n\\n    blobSupportsArrayBufferView = new Blob([new Uint8Array([1, 2])]).size === 2;\\n  } catch (e) {}\\n  /**\\r\\n   * Helper function that maps ArrayBufferViews to ArrayBuffers\\r\\n   * Used by BlobBuilder constructor and old browsers that didn't\\r\\n   * support it in the Blob constructor.\\r\\n   */\\n\\n\\n  function mapArrayBufferViews(ary) {\\n    return ary.map(function (chunk) {\\n      if (chunk.buffer instanceof ArrayBuffer) {\\n        var buf = chunk.buffer; // if this is a subarray, make a copy so we only\\n        // include the subarray region from the underlying buffer\\n\\n        if (chunk.byteLength !== buf.byteLength) {\\n          var copy = new Uint8Array(chunk.byteLength);\\n          copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\\n          buf = copy.buffer;\\n        }\\n\\n        return buf;\\n      }\\n\\n      return chunk;\\n    });\\n  }\\n\\n  function BlobBuilderConstructor(ary, options) {\\n    options = options || {};\\n    var bb = new BlobBuilder();\\n    mapArrayBufferViews(ary).forEach(function (part) {\\n      bb.append(part);\\n    });\\n    return options.type ? bb.getBlob(options.type) : bb.getBlob();\\n  }\\n\\n  ;\\n\\n  function BlobConstructor(ary, options) {\\n    return new origBlob(mapArrayBufferViews(ary), options || {});\\n  }\\n\\n  ;\\n\\n  if (global.Blob) {\\n    BlobBuilderConstructor.prototype = Blob.prototype;\\n    BlobConstructor.prototype = Blob.prototype;\\n  }\\n\\n  function FakeBlobBuilder() {\\n    function toUTF8Array(str) {\\n      var utf8 = [];\\n\\n      for (var i = 0; i < str.length; i++) {\\n        var charcode = str.charCodeAt(i);\\n        if (charcode < 0x80) utf8.push(charcode);else if (charcode < 0x800) {\\n          utf8.push(0xc0 | charcode >> 6, 0x80 | charcode & 0x3f);\\n        } else if (charcode < 0xd800 || charcode >= 0xe000) {\\n          utf8.push(0xe0 | charcode >> 12, 0x80 | charcode >> 6 & 0x3f, 0x80 | charcode & 0x3f);\\n        } // surrogate pair\\n        else {\\n            i++; // UTF-16 encodes 0x10000-0x10FFFF by\\n            // subtracting 0x10000 and splitting the\\n            // 20 bits of 0x0-0xFFFFF into two halves\\n\\n            charcode = 0x10000 + ((charcode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\\n            utf8.push(0xf0 | charcode >> 18, 0x80 | charcode >> 12 & 0x3f, 0x80 | charcode >> 6 & 0x3f, 0x80 | charcode & 0x3f);\\n          }\\n      }\\n\\n      return utf8;\\n    }\\n\\n    function fromUtf8Array(array) {\\n      var out, i, len, c;\\n      var char2, char3;\\n      out = \\\"\\\";\\n      len = array.length;\\n      i = 0;\\n\\n      while (i < len) {\\n        c = array[i++];\\n\\n        switch (c >> 4) {\\n          case 0:\\n          case 1:\\n          case 2:\\n          case 3:\\n          case 4:\\n          case 5:\\n          case 6:\\n          case 7:\\n            // 0xxxxxxx\\n            out += String.fromCharCode(c);\\n            break;\\n\\n          case 12:\\n          case 13:\\n            // 110x xxxx   10xx xxxx\\n            char2 = array[i++];\\n            out += String.fromCharCode((c & 0x1F) << 6 | char2 & 0x3F);\\n            break;\\n\\n          case 14:\\n            // 1110 xxxx  10xx xxxx  10xx xxxx\\n            char2 = array[i++];\\n            char3 = array[i++];\\n            out += String.fromCharCode((c & 0x0F) << 12 | (char2 & 0x3F) << 6 | (char3 & 0x3F) << 0);\\n            break;\\n        }\\n      }\\n\\n      return out;\\n    }\\n\\n    function isDataView(obj) {\\n      return obj && DataView.prototype.isPrototypeOf(obj);\\n    }\\n\\n    function bufferClone(buf) {\\n      var view = new Array(buf.byteLength);\\n      var array = new Uint8Array(buf);\\n      var i = view.length;\\n\\n      while (i--) {\\n        view[i] = array[i];\\n      }\\n\\n      return view;\\n    }\\n\\n    function encodeByteArray(input) {\\n      var byteToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\\n      var output = [];\\n\\n      for (var i = 0; i < input.length; i += 3) {\\n        var byte1 = input[i];\\n        var haveByte2 = i + 1 < input.length;\\n        var byte2 = haveByte2 ? input[i + 1] : 0;\\n        var haveByte3 = i + 2 < input.length;\\n        var byte3 = haveByte3 ? input[i + 2] : 0;\\n        var outByte1 = byte1 >> 2;\\n        var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;\\n        var outByte3 = (byte2 & 0x0F) << 2 | byte3 >> 6;\\n        var outByte4 = byte3 & 0x3F;\\n\\n        if (!haveByte3) {\\n          outByte4 = 64;\\n\\n          if (!haveByte2) {\\n            outByte3 = 64;\\n          }\\n        }\\n\\n        output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\\n      }\\n\\n      return output.join('');\\n    }\\n\\n    var create = Object.create || function (a) {\\n      function c() {}\\n\\n      c.prototype = a;\\n      return new c();\\n    };\\n\\n    if (arrayBufferSupported) {\\n      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\\n\\n      var isArrayBufferView = ArrayBuffer.isView || function (obj) {\\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\\n      };\\n    }\\n    /********************************************************/\\n\\n    /*                   Blob constructor                   */\\n\\n    /********************************************************/\\n\\n\\n    function Blob(chunks, opts) {\\n      chunks = chunks || [];\\n\\n      for (var i = 0, len = chunks.length; i < len; i++) {\\n        var chunk = chunks[i];\\n\\n        if (chunk instanceof Blob) {\\n          chunks[i] = chunk._buffer;\\n        } else if (typeof chunk === 'string') {\\n          chunks[i] = toUTF8Array(chunk);\\n        } else if (arrayBufferSupported && (ArrayBuffer.prototype.isPrototypeOf(chunk) || isArrayBufferView(chunk))) {\\n          chunks[i] = bufferClone(chunk);\\n        } else if (arrayBufferSupported && isDataView(chunk)) {\\n          chunks[i] = bufferClone(chunk.buffer);\\n        } else {\\n          chunks[i] = toUTF8Array(String(chunk));\\n        }\\n      }\\n\\n      this._buffer = [].concat.apply([], chunks);\\n      this.size = this._buffer.length;\\n      this.type = opts ? opts.type || '' : '';\\n    }\\n\\n    Blob.prototype.slice = function (start, end, type) {\\n      var slice = this._buffer.slice(start || 0, end || this._buffer.length);\\n\\n      return new Blob([slice], {\\n        type: type\\n      });\\n    };\\n\\n    Blob.prototype.toString = function () {\\n      return '[object Blob]';\\n    };\\n    /********************************************************/\\n\\n    /*                   File constructor                   */\\n\\n    /********************************************************/\\n\\n\\n    function File(chunks, name, opts) {\\n      opts = opts || {};\\n      var a = Blob.call(this, chunks, opts) || this;\\n      a.name = name;\\n      a.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : new Date();\\n      a.lastModified = +a.lastModifiedDate;\\n      return a;\\n    }\\n\\n    File.prototype = create(Blob.prototype);\\n    File.prototype.constructor = File;\\n    if (Object.setPrototypeOf) Object.setPrototypeOf(File, Blob);else {\\n      try {\\n        File.__proto__ = Blob;\\n      } catch (e) {}\\n    }\\n\\n    File.prototype.toString = function () {\\n      return '[object File]';\\n    };\\n    /********************************************************/\\n\\n    /*                FileReader constructor                */\\n\\n    /********************************************************/\\n\\n\\n    function FileReader() {\\n      if (!(this instanceof FileReader)) throw new TypeError(\\\"Failed to construct 'FileReader': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\\\");\\n      var delegate = document.createDocumentFragment();\\n      this.addEventListener = delegate.addEventListener;\\n\\n      this.dispatchEvent = function (evt) {\\n        var local = this['on' + evt.type];\\n        if (typeof local === 'function') local(evt);\\n        delegate.dispatchEvent(evt);\\n      };\\n\\n      this.removeEventListener = delegate.removeEventListener;\\n    }\\n\\n    function _read(fr, blob, kind) {\\n      if (!(blob instanceof Blob)) throw new TypeError(\\\"Failed to execute '\\\" + kind + \\\"' on 'FileReader': parameter 1 is not of type 'Blob'.\\\");\\n      fr.result = '';\\n      setTimeout(function () {\\n        this.readyState = FileReader.LOADING;\\n        fr.dispatchEvent(new Event('load'));\\n        fr.dispatchEvent(new Event('loadend'));\\n      });\\n    }\\n\\n    FileReader.EMPTY = 0;\\n    FileReader.LOADING = 1;\\n    FileReader.DONE = 2;\\n    FileReader.prototype.error = null;\\n    FileReader.prototype.onabort = null;\\n    FileReader.prototype.onerror = null;\\n    FileReader.prototype.onload = null;\\n    FileReader.prototype.onloadend = null;\\n    FileReader.prototype.onloadstart = null;\\n    FileReader.prototype.onprogress = null;\\n\\n    FileReader.prototype.readAsDataURL = function (blob) {\\n      _read(this, blob, 'readAsDataURL');\\n\\n      this.result = 'data:' + blob.type + ';base64,' + encodeByteArray(blob._buffer);\\n    };\\n\\n    FileReader.prototype.readAsText = function (blob) {\\n      _read(this, blob, 'readAsText');\\n\\n      this.result = fromUtf8Array(blob._buffer);\\n    };\\n\\n    FileReader.prototype.readAsArrayBuffer = function (blob) {\\n      _read(this, blob, 'readAsText');\\n\\n      this.result = blob._buffer.slice();\\n    };\\n\\n    FileReader.prototype.abort = function () {};\\n    /********************************************************/\\n\\n    /*                         URL                          */\\n\\n    /********************************************************/\\n\\n\\n    URL.createObjectURL = function (blob) {\\n      return blob instanceof Blob ? 'data:' + blob.type + ';base64,' + encodeByteArray(blob._buffer) : createObjectURL.call(URL, blob);\\n    };\\n\\n    URL.revokeObjectURL = function (url) {\\n      revokeObjectURL && revokeObjectURL.call(URL, url);\\n    };\\n    /********************************************************/\\n\\n    /*                         XHR                          */\\n\\n    /********************************************************/\\n\\n\\n    var _send = global.XMLHttpRequest && global.XMLHttpRequest.prototype.send;\\n\\n    if (_send) {\\n      XMLHttpRequest.prototype.send = function (data) {\\n        if (data instanceof Blob) {\\n          this.setRequestHeader('Content-Type', data.type);\\n\\n          _send.call(this, fromUtf8Array(data._buffer));\\n        } else {\\n          _send.call(this, data);\\n        }\\n      };\\n    }\\n\\n    global.FileReader = FileReader;\\n    global.File = File;\\n    global.Blob = Blob;\\n  }\\n\\n  if (strTag) {\\n    File.prototype[strTag] = 'File';\\n    Blob.prototype[strTag] = 'Blob';\\n    FileReader.prototype[strTag] = 'FileReader';\\n  }\\n\\n  function fixFileAndXHR() {\\n    var isIE = !!global.ActiveXObject || '-ms-scroll-limit' in document.documentElement.style && '-ms-ime-align' in document.documentElement.style; // Monkey patched \\n    // IE don't set Content-Type header on XHR whose body is a typed Blob\\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/6047383\\n\\n    var _send = global.XMLHttpRequest && global.XMLHttpRequest.prototype.send;\\n\\n    if (isIE && _send) {\\n      XMLHttpRequest.prototype.send = function (data) {\\n        if (data instanceof Blob) {\\n          this.setRequestHeader('Content-Type', data.type);\\n\\n          _send.call(this, data);\\n        } else {\\n          _send.call(this, data);\\n        }\\n      };\\n    }\\n\\n    try {\\n      new File([], '');\\n    } catch (e) {\\n      try {\\n        var klass = new Function('class File extends Blob {' + 'constructor(chunks, name, opts) {' + 'opts = opts || {};' + 'super(chunks, opts || {});' + 'this.name = name;' + 'this.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : new Date;' + 'this.lastModified = +this.lastModifiedDate;' + '}};' + 'return new File([], \\\"\\\"), File')();\\n        global.File = klass;\\n      } catch (e) {\\n        var klass = function klass(b, d, c) {\\n          var blob = new Blob(b, c);\\n          var t = c && void 0 !== c.lastModified ? new Date(c.lastModified) : new Date();\\n          blob.name = d;\\n          blob.lastModifiedDate = t;\\n          blob.lastModified = +t;\\n\\n          blob.toString = function () {\\n            return '[object File]';\\n          };\\n\\n          if (strTag) blob[strTag] = 'File';\\n          return blob;\\n        };\\n\\n        global.File = klass;\\n      }\\n    }\\n  }\\n\\n  if (blobSupported) {\\n    fixFileAndXHR();\\n    global.Blob = blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\\n  } else if (blobBuilderSupported) {\\n    fixFileAndXHR();\\n    global.Blob = BlobBuilderConstructor;\\n  } else {\\n    FakeBlobBuilder();\\n  }\\n})();\"\n\n//# sourceURL=webpack:///./src/vendor/Blob.js?./node_modules/raw-loader!./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/eslint-loader??ref--13-0");

/***/ }),

/***/ "./node_modules/script-loader/index.js!./src/vendor/Blob.js":
/*!*********************************************************!*\
  !*** ./node_modules/script-loader!./src/vendor/Blob.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! !./node_modules/script-loader/addScript.js */ \"./node_modules/script-loader/addScript.js\")(__webpack_require__(/*! !./node_modules/raw-loader!./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/eslint-loader??ref--13-0!./src/vendor/Blob.js */ \"./node_modules/raw-loader/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/eslint-loader/index.js?!./src/vendor/Blob.js\"))\n\n//# sourceURL=webpack:///./src/vendor/Blob.js?./node_modules/script-loader");

/***/ }),

/***/ "./src/vendor/Export2Excel.js":
/*!************************************!*\
  !*** ./src/vendor/Export2Excel.js ***!
  \************************************/
/*! exports provided: export_table_to_excel, export_json_to_excel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"export_table_to_excel\", function() { return export_table_to_excel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"export_json_to_excel\", function() { return export_json_to_excel; });\n/* harmony import */ var core_js_modules_es6_typed_uint8_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.typed.uint8-array */ \"./node_modules/core-js/modules/es6.typed.uint8-array.js\");\n/* harmony import */ var core_js_modules_es6_typed_uint8_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_typed_uint8_array__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/* eslint-disable */\n__webpack_require__(/*! script-loader!file-saver */ \"./node_modules/script-loader/index.js!./node_modules/file-saver/dist/FileSaver.min.js\");\n\n__webpack_require__(/*! script-loader!@/vendor/Blob */ \"./node_modules/script-loader/index.js!./src/vendor/Blob.js\");\n\n__webpack_require__(/*! script-loader!xlsx/dist/xlsx.core.min */ \"./node_modules/script-loader/index.js!./node_modules/xlsx/dist/xlsx.core.min.js\");\n\nfunction generateArray(table) {\n  var out = [];\n  var rows = table.querySelectorAll('tr');\n  var ranges = [];\n\n  for (var R = 0; R < rows.length; ++R) {\n    var outRow = [];\n    var row = rows[R];\n    var columns = row.querySelectorAll('td');\n\n    for (var C = 0; C < columns.length; ++C) {\n      var cell = columns[C];\n      var colspan = cell.getAttribute('colspan');\n      var rowspan = cell.getAttribute('rowspan');\n      var cellValue = cell.innerText;\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue; //Skip ranges\n\n      ranges.forEach(function (range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) {\n            outRow.push(null);\n          }\n        }\n      }); //Handle Row Span\n\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1;\n        colspan = colspan || 1;\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        });\n      }\n\n      ; //Handle Value\n\n      outRow.push(cellValue !== \"\" ? cellValue : null); //Handle Colspan\n\n      if (colspan) for (var k = 0; k < colspan - 1; ++k) {\n        outRow.push(null);\n      }\n    }\n\n    out.push(outRow);\n  }\n\n  return [out, ranges];\n}\n\n;\n\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n      var cell_ref = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      });\n      if (typeof cell.v === 'number') cell.t = 'n';else if (typeof cell.v === 'boolean') cell.t = 'b';else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = XLSX.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n      ws[cell_ref] = cell;\n    }\n  }\n\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n  return ws;\n}\n\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i != s.length; ++i) {\n    view[i] = s.charCodeAt(i) & 0xFF;\n  }\n\n  return buf;\n}\n\nfunction export_table_to_excel(id) {\n  var theTable = document.getElementById(id);\n  console.log('a');\n  var oo = generateArray(theTable);\n  var ranges = oo[1];\n  /* original data */\n\n  var data = oo[0];\n  var ws_name = \"SheetJS\";\n  console.log(data);\n  var wb = new Workbook(),\n      ws = sheet_from_array_of_arrays(data);\n  /* add ranges to worksheet */\n  // ws['!cols'] = ['apple', 'banan'];\n\n  ws['!merges'] = ranges;\n  /* add worksheet to workbook */\n\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), \"test.xlsx\");\n}\n\nfunction formatJson(jsonData) {\n  console.log(jsonData);\n}\n\nfunction export_json_to_excel(th, jsonData, defaultTitle) {\n  /* original data */\n  var data = jsonData;\n  data.unshift(th);\n  var ws_name = \"SheetJS\";\n  var wb = new Workbook(),\n      ws = sheet_from_array_of_arrays(data);\n  /* add worksheet to workbook */\n\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n  var title = defaultTitle || '列表';\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), title + \".xlsx\");\n}\n\n//# sourceURL=webpack:///./src/vendor/Export2Excel.js?");

/***/ })

}]);